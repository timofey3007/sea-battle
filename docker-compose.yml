version: "3"
services:
  nodejs:
    build: ./docker/builds/node
    container_name: nodejs
    restart: always
    ports:
      - 80:${NODE_PORT}
      - 443:${NODE_PORT}
      - ${PEER_PORT}:${PEER_PORT}
    environment:
      - PORT=${NODE_PORT}
      - PEER_PORT=${PEER_PORT}
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=db:27017
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASS=${MONGODB_PASS}
    depends_on:
      - db
    volumes:
      - ./project:/usr/app:cached
      - ./docker/logs/nodejs:/root/.npm/_logs:delegated
    working_dir: /usr/app
    command: bash -c "npm install && pm2-runtime start pm2.json"

  db:
    image: mongo:4
    container_name: mongo-db
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_INITDB_DATABASE=${MONGODB_NAME}
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASS}
    volumes:
      - mongo-db:/data/db:delegated
    command: --smallfiles # --quiet

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - 8080:8081
    environment:
      - ME_CONFIG_MONGODB_AUTH_DATABASE=${MONGODB_NAME}
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGODB_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGODB_PASS}
      - ME_CONFIG_MONGODB_SERVER=db
    depends_on:
      - db

# TODO Will be configured in closest commits.
#  drone-server:
#    image: drone/drone:0.8
#    ports:
#      - 8000:8000
#      - 9000
#    volumes:
#      - drone-server:/var/lib/drone/
#    restart: always
#    environment:
#      - DRONE_OPEN=${DRONE_OPEN}
#      - DRONE_ADMIN=${DRONE_ADMIN}
#      - DRONE_ORGS=${DRONE_ORGS}
#      - DRONE_HOST=${DRONE_HOST}
#      - DRONE_GITHUB=${DRONE_HOST}
#      - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
#      - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
#      - DRONE_SECRET=${DRONE_SECRET}
#
#  drone-agent:
#    image: drone/agent:0.8
#
#    command: agent
#    restart: always
#    depends_on:
#      - drone-server
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    environment:
#      - DRONE_SERVER=drone-server:9000
#      - DRONE_SECRET=${DRONE_SECRET}

volumes:
  drone-server:
  mongo-db:
  logs: